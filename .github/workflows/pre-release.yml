name: pre-release

on:
  push:
    branches:
      - beta
    paths-ignore:
      - examples/**
      - docs/**

jobs:
  setup:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node_modules
        id: node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Install
        if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
        run: yarn --check-files --frozen-lockfile --non-interactive

      - name: pre-build
        run: yarn build

      - name: reinstall
        run: yarn install --check-files

      - name: Cache pre-build node_modules
        id: pre_build_node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-pre-build-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Cache pre-build dist
        id: dist_cache_id
        uses: actions/cache@v2
        with:
          path: '**/dist'
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-dist-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

  build:
    needs: [setup]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore pre-build node_modules
        id: pre_build_node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-pre-build-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Restore pre-build
        id: dist_cache_id
        uses: actions/cache@v2
        with:
          path: '**/dist'
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-dist-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: debug
        run: |
          ls -a
          ls -a packages/vue/
          ls packages/vue/dist

  lint:
    needs: [build]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore pre-build node_modules
        id: pre_build_node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-pre-build-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Restore pre-build
        id: dist_cache_id
        uses: actions/cache@v2
        with:
          path: '**/dist'
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-dist-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Lint
        run: yarn lint

  test:
    needs: [build]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore pre-build node_modules
        id: pre_build_node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-pre-build-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Restore pre-build
        id: dist_cache_id
        uses: actions/cache@v2
        with:
          path: '**/dist'
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-dist-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Test
        run: yarn test

  release:
    needs: [lint, test]
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]
    steps:
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Restore pre-build node_modules
        id: pre_build_node_modules_cache_id
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-pre-build-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Restore pre-build
        id: dist_cache_id
        uses: actions/cache@v2
        with:
          path: '**/dist'
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-dist-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Release
        if: steps.dist_cache_id.outputs.cache-hit == 'true'
        run: yarn release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_PUBLIC }}
